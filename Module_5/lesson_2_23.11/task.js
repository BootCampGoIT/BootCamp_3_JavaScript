// 1. Реализуй модель пользователя

class User {
  // Добавь свойства:
  // name,
  // age,
  // role(по умолчанию user),
  // permissions(по умолчаию пустой массив)
  //   isOnline(по умолчаию пустой false)
  // isAuthenticated(по умолчаию пустой false)
  constructor() {}
  //   добавить геттер и сеттер для свойства permissions.
  //   Сеттер будет записывать в permissions новые данные

  //   добавить геттер и сеттер для свойства role. Будут записываться admin и partner

  //   Добавь код для того, чтобы пользователь вошел в аккаунт. Свойство isAuthenticated измени в true
  authenticate() {}

  //   Добавь код для того, чтобы пользователь стал активным. Свойство isAuthenticated измени в true
  connect() {}

  //   Добавь код для того, чтобы пользователю можно было расширить права доступа. БУдут записываться
  //   данные: "html", "js", "react", "node"
  addPermission() {}
}

const alex = new User({ name: "Alex", age: 25 });

// Проверь функционал

// 2. Расширь функционал базового класса на свое усмотрение.
// Как вариант, ты можешь:
// Добавить новый класс Admin
// Добавить ему собственные свойства логирования его данных.
// Дописать ему методы disconnect(), removePermissions()


