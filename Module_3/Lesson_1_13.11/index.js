// 1. Объекты
// ==============================================================================
// 1.1. Создание объекта
// ------------------------------------------------------------------------------
// const user = {};

// const user = {
//     name: "Nikita",
//     age: 30,
//     status: "Student",
//     course: "Bootcamp 10"
// }

// ------------------------------------------------------------------------------
// 1.2. Доступ к свойствам
// ------------------------------------------------------------------------------
// user.name
// object["name"]

// Обращение к свойству

// Запись в свойство

// ------------------------------------------------------------------------------
// 1.3. Удаление свойств
// ------------------------------------------------------------------------------
// const user = {
//     name: "Nikita",
//     age: 30,
//     status: "Student",
//     course: "Bootcamp 10"
// }

// delete user.course;
// delete user["course"];

// ------------------------------------------------------------------------------
// 1.4. Отсутствующие свойства
// ------------------------------------------------------------------------------

// const user = {
//     name: "Nikita",
//     age: 30,
//     status: "Student",
//     course: "Bootcamp 10"
// }

// console.log(user.isOnline); // undefined

// ------------------------------------------------------------------------------
// 1.5. Короткие свойства
// ------------------------------------------------------------------------------

// const name = "Nikita";
// const age = 30;

// const user = {
//   name: name,
//   age: age,
//   status: "Student",
//   course: "Bootcamp 10",
// };

// ------------------------------------------------------------------------------
// 1.6. Вычисляемые свойства
// ------------------------------------------------------------------------------

// const key1 = "name";
// const key2 = "age";
// const getNewKey = function () {
//     return "studentInfo";
// };
// const getInfo = function () {
//     return "Some information";
// };

// const user = {
//     [key1]: "Nikita",
//     [key2]: 30,
//     [getNewKey()]: getInfo(),
// };

// ------------------------------------------------------------------------------
// 1.7. Методы объекта
// ------------------------------------------------------------------------------

// const hummer = {
//     length: 250,
//     width: 100,
//     property: function () {
//         //ES5
//     console.log("I can beet");
// },
// prop() {
//     //ES6
//     console.log("Can fly");
// },
// };

// hummer.property();
// hummer.prop();

// ------------------------------------------------------------------------------
// 1.8. Доступ к объекту через this
// ------------------------------------------------------------------------------

// const user = {
//   name: "Nikita",
//   age: 30,
//   status: "Student",
//   getInfo() {
//     console.group(`${this.name}'s info:`);
//     console.log(this.name);
//     console.log(this.age);
//     console.groupEnd();
//   },
//   setStatus(status) {
//     this.status = status;
//   },
// };

// ==============================================================================
// 2. Доступ к объекту через this
// ==============================================================================
// Объект не является итерируемым!

// ------------------------------------------------------------------------------
// 2.1. Цикл for...in
// ------------------------------------------------------------------------------
// for (key in object) {
//     // statements
//   }

// const user = {
//   name: "Nikita",
//   age: 30,
//   status: "Student",
// };

// for (const key in user) {
//   console.log(key);
// }

// for (const key in user) {
//   console.log(user[key]);
// }

// ------------------------------------------------------------------------------
// 2.2. Object.keys()
// ------------------------------------------------------------------------------
// Все объекты происходят от конструктора Object
// Object.keys(obj) - вернет массив, с ключами объекта obj в виде строк.

// const user = {
//   name: "Nikita",
//   age: 30,
//   status: "Student",
// };

// const keys = Object.keys(user);
// ------------------------------------------------------------------------------
// 2.3. Object.keys()
// ------------------------------------------------------------------------------
// const user = {
//   name: "Nikita",
//   age: 30,
//   status: "Student",
// };

// const values = Object.values(user);

// ------------------------------------------------------------------------------
// 2.3. Object.keys()
// ------------------------------------------------------------------------------

// const user = {
//   name: "Nikita",
//   age: 30,
//   status: "Student",
// };

// const values = Object.entries(user);

// const keys = Object.keys(user);
// for (const key of keys) {
//     console.log('Value: ', user[key]);
//   }

// const values = Object.entries(user);
// for (const entry of entries) {
//     const key = entry[0];
//     const value = entry[1];

//     console.log(`${key}: ${value}`);
//   }

// let total = 0;
// const values = Object.values(user);
// for (const value of values) {
//   total += value;
// }

// ==============================================================================
// 3. Операции spread и rest
// ==============================================================================
// Для работы с итерируемыми объектами, такими как строка, массив или объект.
// ------------------------------------------------------------------------------
// 3.1. Операция spread
// ------------------------------------------------------------------------------

// 3.1.1. Распыление аргументов
// ------------------------------------------------------------------------------
// const numbers = [1, 2, 3, 4, 5, 6];
// const min = Math.min(...numbers);

// ------------------------------------------------------------------------------
// 3.1.2 Распыление в массив
// ------------------------------------------------------------------------------
// const str = "Lorem";
// const letters = [...str];

// ------------------------------------------------------------------------------
// 3.1.3 Распыление массивов
// ------------------------------------------------------------------------------
// const users = ["Alex", "Nikita"];
// const data = ["Bob", "Mitchel"];
// const concat = [...users, data];

// ------------------------------------------------------------------------------
// 3.1.4 const shallowCopy
// ------------------------------------------------------------------------------
// const users = ["Alex", "Nikita"];
// const shallowCopy = [...users];

// ------------------------------------------------------------------------------
// 3.1.5. Распыление объектов
// ------------------------------------------------------------------------------
// const user = {
//   name: "Alex",
//   age: 25,
// };

// const info = {
//   status: "student",
//   homeworks: ["hw-1", "hw-2", "hw-3"],
// };

// const userInfo = { ...user, ...info };
// const resultObject = Object.assign({}, user, info);
// ==============================================================================
// 4. Операция rest
// ==============================================================================
// Позволяет скопировать группу элементов коллекции в новую коллекцию, не изменяя оригинальную.
// ------------------------------------------------------------------------------
// 4.1. Операция rest
// ------------------------------------------------------------------------------
// const add = function (...args) {
//   console.log(args);
// };

// add(1, 2, 3);
// add(1, 2, 3, 4, 5);

// const add = function (a,b,...args) {
//   console.log(args);
// };

// add(1, 2, 3);
// add(1, 2, 3, 4, 5);
// ==============================================================================
// 5. Деструктуризация объектов
// ==============================================================================
// const user = {
//   name: "Alex",
//   age: 25,
//   status: "Student",
// };

// const name = user.name;

// const {name, age} = user;

// const {name: userName, age: userAge} = user;

// const { name, ...rest } = user;
// ==============================================================================
// 6. Деструктуризация массивов
// ==============================================================================
// const numbers = [1, 2, 3, 4, 5];
// const [num1, num2, num3, ...rest] = numbers;
// console.log("number1", rest);

// const numbers = [1, 2, 3];
// let [a, b, c] = numbers;

// const numbers = [1, 2, 3];
// let a, b, c;
// [a, b, c] = numbers;

// [, , c] = numbers;
